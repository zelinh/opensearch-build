lib = library(identifier: "jenkins@20211123", retriever: legacySCM(scm))

pipeline {
    agent {
        node {
            label 'Jenkins-Agent-al2-x64-m5xlarge'
        }
    }
    options {
        timeout(time: 1, unit: 'HOURS')
    }
    parameters {
            choice(
                name: 'Architecture',
                choices: ['x64', 'arm64'],
                description: 'The architecture would be used for RPM validation. Selected choices: x64, arm64.'
            )
            string(
                name: 'RPM distribution URL',
                description: 'The URL to download the RPM',
                trim: true
            )
            string(
                name: 'RPM distribution manifest URL',
                description: 'The URL to download the RPM distribution manifest.',
                trim: true
            )


        }

    stages {
        stage('RPM validation') {
            steps {
                script {
                    def ARTIFACT_PATH = "Playground/zelin-distribution-build/1.3.0/9/linux/x64"
                    downloadFromS3(
                        destPath: "$WORKSPACE/dist",
                        bucket: "${ARTIFACT_BUCKET_NAME}",
                        path: "$ARTIFACT_PATH/dist/",
                        force: true
                    )
                    println("download completed************")
                    sh "ls $WORKSPACE/dist/$ARTIFACT_PATH/dist/opensearch"

                    validateMetaRPM(
                        distManifest: "$WORKSPACE/dist/$ARTIFACT_PATH/dist/opensearch/manifest.yml",
                        rpmDistribution: "$WORKSPACE/dist/$ARTIFACT_PATH/dist/opensearch/opensearch-1.3.0-linux-x64.rpm"
                    )
//                     println("Head back to jenkinsn")
//                     println(fileExists('/var/log/opensearch/install_demo_configuration.log'))

                    sh ("sudo yum remove -y opensearch")
                }
            }
            post {
                always {
//                     sh "rm -rf $WORKSPACE/*"
                    postCleanup()
                }
            }
        }
    }
    post() {
        success {
            echo "Validation has been completed."
        }
        failure {
            echo "validation failed."
        }
    }
}

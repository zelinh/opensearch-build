lib = library(identifier: 'jenkins@20211123', retriever: legacySCM(scm))

pipeline {
    agent {
        docker {
            label 'Jenkins-Agent-al2-x64-c54xlarge-Docker-Host'
            image 'opensearchstaging/ci-runner:centos7-x64-arm64-jdkmulti-node10.24.1-cypress6.9.1-20211130'
            alwaysPull true
        }
    }
    parameters {
        string(
            name: 'VERSION',
            description: 'Version of the distribution build manifest.',
            trim: true
        )
    }
    environment {
        BUILD_MANIFEST = "opensearch-$VERSION/manifest.yml"
    }
    stages {
        stage('manifest fetch') {
            steps {
                script {
                    release_url = "https://artifacts.opensearch.org/releases/bundle/opensearch/$VERSION/opensearch-$VERSION-linux-x64.tar.gz"
                    sh "curl -SLO $release_url && tar -xf opensearch-$VERSION-linux-x64.tar.gz"
                    echo "Distribution build manifest is downloaded to $BUILD_MANIFEST"
                    /* sh """
                        ls $WORKSPACE/builds/opensearch
                        cat $WORKSPACE/builds/opensearch/manifest.yml
                    """ */
//                     def buildManifestObj = lib.jenkins.BuildManifest.new(readYaml(file: buildManifest))
//                     String buildManifestId = buildManifestObj.getArtifactBuildId()
//                     echo "Manifest Id is $buildManifestId"
//                     echo "The name is ${GITHUB_BOT_TOKEN_NAME}"
                    sh """
                        git clone -b auto-create-tag https://github.com/zelinh/opensearch-build.git
                        ls $WORKSPACE/opensearch-build/jenkins/release-tag/
                        cat $WORKSPACE/opensearch-build/jenkins/release-tag/manifest.yml
                    """
                    echo "Ready to create Tag here ****************"
                    echo "$BUILD_MANIFEST"
                    sh "cat $BUILD_MANIFEST"
                    createReleaseTag(
                        buildManifest: "$BUILD_MANIFEST",
                        tagVersion: VERSION
                    )

                }
            }
        }
    }
    post() {
        always {
            script {
                postCleanup()
            }
        }
    }
}

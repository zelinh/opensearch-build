lib = library(identifier: 'jenkins@20211123', retriever: legacySCM(scm))

pipeline {
    options {
            timeout(time: 2, unit: 'HOURS')
    }
    agent {
        docker {
            label 'Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host'
            image 'opensearchstaging/ci-runner:ci-runner-centos7-opensearch-build-v2'
            alwaysPull true
        }
    }
    parameters {
        string(
            name: 'INPUT_MANIFEST_URL',
            description: 'INPUT_MANIFEST_URL',
            trim: true
        )
        string(
            name: 'COMPONENT_NAME',
            description: 'COMPONENT_NAME',
            trim: true
        )
    }
    stages {
        stage('Write Yaml') {
            steps {
                script {
                    def inputManifestFile = "manifests/2.2.0/opensearch-2.2.0.yml"
                    def outputFile = "$WORKSPACE/commits.yml"
                    echo ("$outputFile *******")
                    echo ("$inputManifestFile *******")
                    echo ("$COMPONENT_NAME")
                    yamlUpdate(
                        componentName: COMPONENT_NAME,
                        inputManifest: "$inputManifestFile",
                        outputFile: "$outputFile",
                        status: "NOT_STARTED",
                        stage: "START"
                    )
                    echo ("Display outputFile1*******")
//                     getRepositoryCommit(
//                         componentName: COMPONENT_NAME,
//                         inputManifest: inputManifestFile,
//                         outputFile: "commitsPeter.yml"
//                     )
//                     echo ("Display outputFilePeter*******")
//                     sh "cat commitsPeter.yml"
//                     yamlUpdate(
//                         inputManifest: "$outputFile",
//                         outputFile: "$outputFile",
//                         stage: "IN_PROGRESS"
//                     )
//                     echo ("Display outputFile2*******")
//                     sh "cat $outputFile"
                       echo (currentBuild.durationString)
                    yamlUpdate(
                        componentName: COMPONENT_NAME,
                        inputManifest: "commits.yml",
                        outputFile: "commits.yml",
                        status: "Succeed",
                        duration: currentBuild.duration,
                        stage: "COMPLETE"
                    )

//                     echo ("Display outputFile3*******")
//                     sh "cat $outputFile"
                }
            }
        }
    }
    post() {
        always {
            script {
                postCleanup()
            }
        }
    }
}
